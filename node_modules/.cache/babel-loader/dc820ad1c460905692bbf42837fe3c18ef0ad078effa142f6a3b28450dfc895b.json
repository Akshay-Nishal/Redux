{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    increase(state, action) {\n      console.log(action);\n      state.counter = state.counter + action.payload.amount;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer = (state=initialState,action)=>{\n//     if(action.type==='INCREMENT'){\n//         return{\n//             counter:state.counter+1,\n//             showCounter:true\n//         }\n//     }\n//     if(action.type==='DECREMENT'){\n//         return{\n//             counter:state.counter-1,\n//             showCounter:true\n//         }\n//     }\n//     if(action.type==='TOGGLE'){\n//         console.log(\"Here\")\n//         return{\n//             counter:state.counter,\n//             showCounter:!state.showCounter\n//         }\n//     }\n//     return{\n//         counter:state.counter,\n//         showCounter:true\n\n//     }\n// }\n\nconst store = configureStore({\n  //it  helps to merge multople slice reducer \n  reducer: counterSlice.reducer\n  // reducer:{counter:counterSlice.reducer,}    by this we can merge multiple reducer\n});\n\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createStore","createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","increase","action","console","log","payload","amount","decrement","toggle","store","reducer","counterActions","actions"],"sources":["C:/Users/aksha/OneDrive/Documents/class/React/Sharpener/redux/Redux/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux'\r\nimport {createSlice, configureStore} from '@reduxjs/toolkit'\r\n\r\nconst initialState={\r\n    counter:0,\r\n    showCounter:true\r\n}\r\n\r\nconst counterSlice = createSlice({\r\n    name:'counter',\r\n    initialState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        increase(state,action){\r\n            console.log(action)\r\n            state.counter=state.counter+action.payload.amount\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        toggle(state){\r\n            state.showCounter=!state.showCounter\r\n        },\r\n    }\r\n})\r\n\r\n// const counterReducer = (state=initialState,action)=>{\r\n//     if(action.type==='INCREMENT'){\r\n//         return{\r\n//             counter:state.counter+1,\r\n//             showCounter:true\r\n//         }\r\n//     }\r\n//     if(action.type==='DECREMENT'){\r\n//         return{\r\n//             counter:state.counter-1,\r\n//             showCounter:true\r\n//         }\r\n//     }\r\n//     if(action.type==='TOGGLE'){\r\n//         console.log(\"Here\")\r\n//         return{\r\n//             counter:state.counter,\r\n//             showCounter:!state.showCounter\r\n//         }\r\n//     }\r\n//     return{\r\n//         counter:state.counter,\r\n//         showCounter:true\r\n\r\n//     }\r\n// }\r\n\r\n\r\nconst store = configureStore({      //it  helps to merge multople slice reducer \r\n    reducer:counterSlice.reducer\r\n    // reducer:{counter:counterSlice.reducer,}    by this we can merge multiple reducer\r\n})\r\n\r\nexport const counterActions = counterSlice.actions\r\n\r\nexport default store\r\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC,SAAQC,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAE5D,MAAMC,YAAY,GAAC;EACfC,OAAO,EAAC,CAAC;EACTC,WAAW,EAAC;AAChB,CAAC;AAED,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAC,SAAS;EACdJ,YAAY;EACZK,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,QAAQA,CAACD,KAAK,EAACE,MAAM,EAAC;MAClBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnBF,KAAK,CAACN,OAAO,GAACM,KAAK,CAACN,OAAO,GAACQ,MAAM,CAACG,OAAO,CAACC,MAAM;IACrD,CAAC;IACDC,SAASA,CAACP,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDc,MAAMA,CAACR,KAAK,EAAC;MACTA,KAAK,CAACL,WAAW,GAAC,CAACK,KAAK,CAACL,WAAW;IACxC;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA,MAAMc,KAAK,GAAGjB,cAAc,CAAC;EAAO;EAChCkB,OAAO,EAACd,YAAY,CAACc;EACrB;AACJ,CAAC,CAAC;;AAEF,OAAO,MAAMC,cAAc,GAAGf,YAAY,CAACgB,OAAO;AAElD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}