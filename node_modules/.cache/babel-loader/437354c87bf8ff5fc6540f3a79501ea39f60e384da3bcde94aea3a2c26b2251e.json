{"ast":null,"code":"// import {createStore} from 'redux'\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    increase(state, action) {\n      // console.log(action)\n      state.counter = state.counter + action.payload.amount;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initalAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initalAuthState,\n  reducers: {\n    login(state) {\n      console.log(\"asda\");\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n\n// const counterReducer = (state=initialState,action)=>{\n//     if(action.type==='INCREMENT'){\n//         return{\n//             counter:state.counter+1,\n//             showCounter:true\n//         }\n//     }\n//     if(action.type==='DECREMENT'){\n//         return{\n//             counter:state.counter-1,\n//             showCounter:true\n//         }\n//     }\n//     if(action.type==='TOGGLE'){\n//         console.log(\"Here\")\n//         return{\n//             counter:state.counter,\n//             showCounter:!state.showCounter\n//         }\n//     }\n//     return{\n//         counter:state.counter,\n//         showCounter:true\n\n//     }\n// }\n\nconst store = configureStore({\n  //it  helps to merge multople slice reducer \n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n  // reducer:{counter:counterSlice.reducer,}    by this we can merge multiple reducer\n});\n\nexport const counterActions = counterSlice.actions; //it autogenerates actions for usuth\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","increase","action","payload","amount","decrement","toggle","initalAuthState","isAuthenticated","authSlice","login","console","log","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["C:/Users/aksha/OneDrive/Documents/class/React/Sharpener/redux/Redux/src/store/index.js"],"sourcesContent":["// import {createStore} from 'redux'\r\nimport {createSlice, configureStore} from '@reduxjs/toolkit'\r\n\r\nconst initialCounterState={\r\n    counter:0,\r\n    showCounter:true\r\n}\r\n\r\nconst counterSlice = createSlice({\r\n    name:'counter',\r\n    initialState:initialCounterState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        increase(state,action){\r\n            // console.log(action)\r\n            state.counter=state.counter+action.payload.amount\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        toggle(state){\r\n            state.showCounter=!state.showCounter\r\n        },\r\n    }\r\n})\r\n\r\nconst initalAuthState={\r\n    isAuthenticated: false\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name:'authentication',\r\n    initialState:initalAuthState,\r\n    reducers:{\r\n        login(state){\r\n            console.log(\"asda\")\r\n            state.isAuthenticated=true\r\n        },\r\n        logout(state){\r\n            state.isAuthenticated=false\r\n        }\r\n    }\r\n}) \r\n\r\n// const counterReducer = (state=initialState,action)=>{\r\n//     if(action.type==='INCREMENT'){\r\n//         return{\r\n//             counter:state.counter+1,\r\n//             showCounter:true\r\n//         }\r\n//     }\r\n//     if(action.type==='DECREMENT'){\r\n//         return{\r\n//             counter:state.counter-1,\r\n//             showCounter:true\r\n//         }\r\n//     }\r\n//     if(action.type==='TOGGLE'){\r\n//         console.log(\"Here\")\r\n//         return{\r\n//             counter:state.counter,\r\n//             showCounter:!state.showCounter\r\n//         }\r\n//     }\r\n//     return{\r\n//         counter:state.counter,\r\n//         showCounter:true\r\n\r\n//     }\r\n// }\r\n\r\n\r\nconst store = configureStore({      //it  helps to merge multople slice reducer \r\n    reducer:{counter:counterSlice.reducer,auth:authSlice.reducer}\r\n    // reducer:{counter:counterSlice.reducer,}    by this we can merge multiple reducer\r\n})\r\n\r\nexport const counterActions = counterSlice.actions    //it autogenerates actions for usuth\r\nexport const authActions = authSlice.actions\r\n\r\nexport default store\r\n"],"mappings":"AAAA;AACA,SAAQA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAE5D,MAAMC,mBAAmB,GAAC;EACtBC,OAAO,EAAC,CAAC;EACTC,WAAW,EAAC;AAChB,CAAC;AAED,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAC,SAAS;EACdC,YAAY,EAACL,mBAAmB;EAChCM,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQA,CAACD,KAAK,EAACE,MAAM,EAAC;MAClB;MACAF,KAAK,CAACP,OAAO,GAACO,KAAK,CAACP,OAAO,GAACS,MAAM,CAACC,OAAO,CAACC,MAAM;IACrD,CAAC;IACDC,SAASA,CAACL,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDa,MAAMA,CAACN,KAAK,EAAC;MACTA,KAAK,CAACN,WAAW,GAAC,CAACM,KAAK,CAACN,WAAW;IACxC;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMa,eAAe,GAAC;EAClBC,eAAe,EAAE;AACrB,CAAC;AAED,MAAMC,SAAS,GAAGnB,WAAW,CAAC;EAC1BM,IAAI,EAAC,gBAAgB;EACrBC,YAAY,EAACU,eAAe;EAC5BT,QAAQ,EAAC;IACLY,KAAKA,CAACV,KAAK,EAAC;MACRW,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBZ,KAAK,CAACQ,eAAe,GAAC,IAAI;IAC9B,CAAC;IACDK,MAAMA,CAACb,KAAK,EAAC;MACTA,KAAK,CAACQ,eAAe,GAAC,KAAK;IAC/B;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA,MAAMM,KAAK,GAAGvB,cAAc,CAAC;EAAO;EAChCwB,OAAO,EAAC;IAACtB,OAAO,EAACE,YAAY,CAACoB,OAAO;IAACC,IAAI,EAACP,SAAS,CAACM;EAAO;EAC5D;AACJ,CAAC,CAAC;;AAEF,OAAO,MAAME,cAAc,GAAGtB,YAAY,CAACuB,OAAO,EAAI;AACtD,OAAO,MAAMC,WAAW,GAAGV,SAAS,CAACS,OAAO;AAE5C,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}