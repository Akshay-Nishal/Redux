{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\OneDrive\\\\Documents\\\\class\\\\React\\\\Sharpener\\\\redux\\\\Redux\\\\src\\\\components\\\\Counter.js\",\n  _s = $RefreshSig$();\nimport classes from './Counter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  const counter = useSelector(state => state.counter); //it automatically subscribe to redux store and always provide latest value/ If we unmount this component, it unsubscribe automatically\n  const dispatch = useDispatch();\n  const toggleCounterHandler = () => {};\n  const incrementHandler = () => {\n    dispatch({\n      type: 'INCREMENT'\n    });\n  };\n  const decrementHandler = () => {\n    dispatch({\n      type: 'DECREMENT'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: [\"-- \", counter, \" --\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: counter < 1,\n        onClick: decrementHandler,\n        children: \"Decrement by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"kekweKlgGDYl7VGjQQ+BKXXb0Ho=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["classes","useSelector","useDispatch","jsxDEV","_jsxDEV","Counter","_s","counter","state","dispatch","toggleCounterHandler","incrementHandler","type","decrementHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aksha/OneDrive/Documents/class/React/Sharpener/redux/Redux/src/components/Counter.js"],"sourcesContent":["import classes from './Counter.module.css';\nimport {useSelector, useDispatch} from 'react-redux'\n\nconst Counter = () => {\n  const counter = useSelector(state=>state.counter)   //it automatically subscribe to redux store and always provide latest value/ If we unmount this component, it unsubscribe automatically\n  const dispatch = useDispatch()\n  const toggleCounterHandler = () => {};\n  const incrementHandler =()=>{\n    dispatch({type:'INCREMENT'})\n  }\n  const decrementHandler =()=>{\n    dispatch({type:'DECREMENT'})\n\n  }\n\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>-- {counter} --</div>\n      <div>\n        <button onClick={incrementHandler} >Increment by 5</button>\n        <button disabled={counter<1} onClick={decrementHandler} >Decrement by 5</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,OAAO,GAAGN,WAAW,CAACO,KAAK,IAAEA,KAAK,CAACD,OAAO,CAAC,EAAG;EACpD,MAAME,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,oBAAoB,GAAGA,CAAA,KAAM,CAAC,CAAC;EACrC,MAAMC,gBAAgB,GAAEA,CAAA,KAAI;IAC1BF,QAAQ,CAAC;MAACG,IAAI,EAAC;IAAW,CAAC,CAAC;EAC9B,CAAC;EACD,MAAMC,gBAAgB,GAAEA,CAAA,KAAI;IAC1BJ,QAAQ,CAAC;MAACG,IAAI,EAAC;IAAW,CAAC,CAAC;EAE9B,CAAC;EAGD,oBACER,OAAA;IAAMU,SAAS,EAAEd,OAAO,CAACO,OAAQ;IAAAQ,QAAA,gBAC/BX,OAAA;MAAAW,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBf,OAAA;MAAKU,SAAS,EAAEd,OAAO,CAACoB,KAAM;MAAAL,QAAA,GAAC,KAAG,EAACR,OAAO,EAAC,KAAG;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpDf,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAQiB,OAAO,EAAEV,gBAAiB;QAAAI,QAAA,EAAE;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3Df,OAAA;QAAQkB,QAAQ,EAAEf,OAAO,GAAC,CAAE;QAACc,OAAO,EAAER,gBAAiB;QAAAE,QAAA,EAAE;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,eACNf,OAAA;MAAQiB,OAAO,EAAEX,oBAAqB;MAAAK,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEX,CAAC;AAACb,EAAA,CAxBID,OAAO;EAAA,QACKJ,WAAW,EACVC,WAAW;AAAA;AAAAqB,EAAA,GAFxBlB,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}